[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2018 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Jonathan Marino - initial API and implementation
[/comment]
[module interfaceImplementationFile('http://www.eclipse.org/uml2/5.0.0/UML')]

[import org::eclipse::umlgen::gen::embedded::c::templates::ooc::tmooc::interface /]
[import org::eclipse::umlgen::gen::embedded::c::commons::operations /]
[import org::eclipse::umlgen::gen::embedded::c::commons::ooc::interface /]
[import org::eclipse::umlgen::gen::embedded::c::templates::ooc::tmooc::method /]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::class/]
[import org::eclipse::umlgen::gen::embedded::c::commons::constraint/]
[import org::eclipse::umlgen::gen::embedded::c::templates::function/]
[import org::eclipse::umlgen::gen::embedded::c::templates::define/]
[import org::eclipse::umlgen::gen::embedded::c::templates::type/]
[import org::eclipse::umlgen::gen::embedded::c::templates::include/]
[import org::eclipse::umlgen::gen::embedded::c::templates::constant/]
[import org::eclipse::umlgen::gen::embedded::c::templates::variable/]
[import org::eclipse::umlgen::gen::embedded::c::services::queries/]
[import org::eclipse::umlgen::gen::embedded::c::services::configuration/]
[import org::eclipse::umlgen::gen::embedded::c::commons::property /]

[template public generateOOCInterfaceImplementationFile(anInterface : uml::Interface)?(not anInterface.isMixin())]

/**********************************************************************************
 * Copyright: [getCopyright()/]
 * Project: [anInterface.getModel().name/]
 * File: [getFilePath()/][getName()/].c
 * Code Management Tool File Version: [getVersion()/]
[if (isSvnDateEnabled())]
 * Date: $Date$
[/if]
 * SDD Component: [name/]
 * Language: C
 * Author: [getAuthor()/]
[if (isSvnIdEnabled())]
 * Last Change: $Id$
[/if]
 **********************************************************************************/

/*!
 * \file [getFilePath()/][getName()/].c
 * \brief [name/]
 */


/**********************************************************************************
 * [getFilePath()/][getName()/].c
 **********************************************************************************/
/*## package [getFullFilePath().concat('/').substituteAll('//', '').substituteAll('/', '::')/] */

/*## class TopLevel::[name/] */



#include "[anInterface.getName()/].h"

AllocateInterface( [anInterface.getName()/] );


/**********************************************************************************
 * File Path: [getFullFilePath()/][getName()/].c
 **********************************************************************************/
[/template]
