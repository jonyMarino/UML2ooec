[comment encoding = UTF-8 /]
[comment]
 * Copyright (c) 2018
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Jonathan Marino - initial API and implementation
[/comment]


[module mixinImplementationHeaderFile('http://www.eclipse.org/uml2/5.0.0/UML')]

[import org::eclipse::umlgen::gen::embedded::c::templates::ooc::comment/]
[import org::eclipse::umlgen::gen::embedded::c::commons::ooc::tmooc::operations /]
[import org::eclipse::umlgen::gen::embedded::c::templates::ooc::tmooc::method /]
[import org::eclipse::umlgen::gen::embedded::c::commons::namedelement/]
[import org::eclipse::umlgen::gen::embedded::c::commons::ooc::interface/]
[import org::eclipse::umlgen::gen::embedded::c::commons::ooc::tmooc::class/]
[import org::eclipse::umlgen::gen::embedded::c::commons::constraint/]
[import org::eclipse::umlgen::gen::embedded::c::templates::function/]
[import org::eclipse::umlgen::gen::embedded::c::templates::define/]
[import org::eclipse::umlgen::gen::embedded::c::templates::type/]
[import org::eclipse::umlgen::gen::embedded::c::templates::include/]
[import org::eclipse::umlgen::gen::embedded::c::templates::constant/]
[import org::eclipse::umlgen::gen::embedded::c::templates::variable/]
[import org::eclipse::umlgen::gen::embedded::c::templates::structure/]
[import org::eclipse::umlgen::gen::embedded::c::services::queries/]
[import org::eclipse::umlgen::gen::embedded::c::services::configuration/]
[import org::eclipse::umlgen::gen::embedded::c::commons::property /]

[template public generateMixinImplementationHeaderFile(anInterface : uml::Interface)?(anInterface.isMixin())]
[anInterface.genFileComment(getFilePath().toString()+'implement/','h','C')/]

/**********************************************************************************
 * [getFilePath()/]implement/[getName()/].h
 **********************************************************************************/
/*## package [getFullFilePath().concat('/').substituteAll('//', '').substituteAll('/', '::')/] */


#ifndef IMPLEMENT_[getName().toUpperCase()/]_H
#define IMPLEMENT_[getName().toUpperCase()/]_H

[comment ---------- generate includes ----------------------------------/]
#ifndef [getName().toUpperCase()/]_H
#error Do #include "[getName().toLowerCase()/].h" right before doing #include "implement/[getName().toLowerCase()/].h"
#endif

/*! 
 * \package [name/]
[if ownedComment->notEmpty()]
 * [ownedComment.format('\x5cbrief ', false, ' * ', 120)/]
[/if]
[if (isTraceabilityEnabled())]
[if (anInterface.isConstrained(getModel().getAllConstraints()))]
 *
 * <b>Requirements traceability</b>
 [anInterface.getRequirementList('*   ')/]
[/if]
[/if]
 */

MixinMembers( [anInterface.getName()/] )
[let seq : Sequence(uml::NamedElement) = getNotReadOnly(getHasTypeApplied(getNotUsesStaticMethods(ownedAttribute->asSequence())))]
[for (n : uml::NamedElement | seq->orderByContents())]
	[n.oclAsType(uml::Property).genFields()/]
[/for]	
[/let]
EndOfClassMembers;

#endif

[/template]
